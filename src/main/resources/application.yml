server:
  port: 8123
  servlet:
    context-path: /api    #指定访问后端的上下文路径，即localhost:8123/api
    # cookie 2 天过期
    session:
      cookie:
        max-age: 172800
spring:
#  # 默认 dev 环境
  profiles:
    active: prod
  application:
    name: zou-picture-backend  #指定项目名称，没啥用，有仪式感


    # 空间图片分表
  shardingsphere:
    datasource:
      names: zou_picture  #指定逻辑库名
      zou_picture: #配置数据库连接
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/zou_picture
        username: xxx
        password: xxx
    rules: #分表算法
      sharding: # 动态分表
        tables:
          picture:
            actual-data-nodes: zou_picture.picture  #实际表结点
            table-strategy:
              standard:
                sharding-column: spaceId   #指定分表字段
                sharding-algorithm-name: picture_sharding_algorithm   # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED     #基于类的自定义算法
            props:
              strategy: standard  #标准策略
              algorithmClassName: com.zr.yunbackend.manager.sharding.PictureShardingAlgorithm
    props:
      sql-show: true
  # session 配置
  session:
    store-type: redis
    # session 2 天过期
    timeout: 172800
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
#    # 仅在开发环境开启日志
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
    enable-sql-runner: true

# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.zr.yunbackend.controller

